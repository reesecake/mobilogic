package org.ecs160.a2;

import static com.codename1.ui.CN.*;

import com.codename1.components.InteractionDialog;
import com.codename1.components.SpanLabel;
import com.codename1.io.Log;
import com.codename1.ui.*;
import com.codename1.ui.geom.Dimension;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class AppMain {

    private Form current;
    public static Resources theme;
    private CanvasContainer canvasContainer;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if(current != null){
            current.show();
            return;
        }

        Form main = new Form("MobiLogic", BoxLayout.y());
        main.setScrollableY(false);
        addInfoButton(main);

        canvasContainer = new CanvasContainer();
        main.add(canvasContainer);

        SelectorPanel selectorPanel = new SelectorPanel(canvasContainer);
        main.add(selectorPanel);
        main.show();

        // from compenent_struct merge:
        // DEBUG - Circuit
        /*
        Circuit mainCircuit = new Circuit();
        // temporary design
        // <off/off>==1_____3_____
        // <on/off>==2____/

        LogicComponent gate1 = new LogicComponent(2);
        LogicComponent gate2 = new LogicComponent(2);
        LogicComponent gate3 = new LogicComponent(2);
        gate1.name = "GATE1";
        gate2.name = "GATE2";
        gate3.name = "GATE3";

        // Add Three Standalone Gates
        mainCircuit.AddComponent(gate1);
        mainCircuit.AddComponent(gate2);
        mainCircuit.AddComponent(gate3);
        // Connect Gate 1 to Gate 3
        gate1.ConnectToGate(gate3,0);
        mainCircuit.SetComponent(gate1);
        mainCircuit.SetComponent(gate3);

        //Update Circuit
        mainCircuit.Update();

        // Toggle Gate2 Input
        // Connect Gate 2 to Gate 3
        gate2.SetInput(0,true);
        gate2.ConnectToGate(gate3,1);
        mainCircuit.SetComponent(gate2);
        mainCircuit.SetComponent(gate3);
        //Update Circuit
        mainCircuit.Update();
        */
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

    public void addInfoButton(Form main) {
        Style s = UIManager.getInstance().getComponentStyle("Title");
        FontImage infoIcon = FontImage.createMaterial(FontImage.MATERIAL_INFO_OUTLINE, s);

        Command infoCmd = Command.create("", infoIcon, evt -> {
            InteractionDialog dlg = new InteractionDialog("Info");
            dlg.setLayout(new BorderLayout());
            dlg.setDisposeWhenPointerOutOfBounds(true);

            dlg.add(BorderLayout.CENTER, new SpanLabel("Double tap a gate for more options.\nLong press to connect wires."));
            Button close = new Button("Got it!");
            close.addActionListener((ee) -> dlg.dispose());
            dlg.addComponent(BorderLayout.SOUTH, close);

            Dimension pre = dlg.getContentPane().getPreferredSize();
            dlg.show(20, pre.getHeight() * 7, Display.getInstance().getDisplayWidth() * 3/5, 20);
        });

        main.getToolbar().addCommandToRightBar(infoCmd);
    }
}
